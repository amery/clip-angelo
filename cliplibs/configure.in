#!/bin/sh -u
#
#	Configure script for clip
#	<uri@itk.ru>
#
source ../configure.ini
beep_on
OnScreen 2 "DIRS_TO_SCAN = >Makefile.01"
#echo "DIRS_TO_SCAN =" 												>Makefile.01
DIRS_TO_SCAN=""
#echo "CFLAGS = \$(C_FLAGS) -I." 																	>>Makefile.ini
#echo "CLIPFLAGS = -l -w -O -n -I . -I include -I ../include -I\$(Clip_I_Dir)" 	>>Makefile.ini
AllDir="bzip2 gzip com crypto cti fcgi gd glade2 gtk gtk2 gtkextra fw dbtcp codb mysql odbc oracle postgres
nanfor netto postscript r2d2 rtf xml"
export DIRS_TO_SCAN

function Get_Check ()
{
	local VarX=" "
	[ -f clip-$1.ok ] && VarX="Y"
	[ -f clip-$1.no ] && VarX="N"
	while [[ $VarX != [YyNn] ]] ; do
		OnScreen 2 "Do you want to install library clip-$1 : [y/n] :"
		read -n 1 VarX 		>&0
	done
	if [[ "$VarX" = [Yy] ]] ; then
#	echo "DIRS_TO_SCAN += clip-$1" 							>>Makefile.01
		touch clip-$1.ok
		echo "$1"
	else
		touch clip-$1.no
	fi
}

for dName in $AllDir ; do
	touch clip-$dName.ok
	VarX=""
	VarX=$(Get_Check $dName)
	if ! [[ -z $VarX ]] ; then
		DIRS_TO_SCAN="$DIRS_TO_SCAN clip-"$VarX
	fi
#	OnScreen 1 $DIRS_TO_SCAN
done

if [[ $ARCH = "x86_64" ]] && [[ $C64 = "64" ]] ; then
	ARCH=x86_64
	C64=64
else
	ARCH=i586
	C64=""
	VarX=" "
	[ -f clip-interbase.ok ] && VarX="Y"
	[ -f clip-interbase.no ] && VarX="N"
	while [[ $VarX != [YyNn] ]] ; do
		OnScreen 2 "Do you want to install library clip-interbase : [y/n] :"
		read -n 1 VarX 		>&0
	done
	if [[ "$VarX" = [Yy] ]] ; then
#		echo "DIRS_TO_SCAN += clip-interbase" 					>>Makefile.01
		DIRS_TO_SCAN="$DIRS_TO_SCAN clip-interbase"
		touch clip-interbase.ok
	else
		touch clip-interbase.no
	fi
fi
echo "DIRS_TO_SCAN = \$(sort $DIRS_TO_SCAN )" 							>./Makefile.01
echo "DIRS_TO_SCAN = \$(sort $DIRS_TO_SCAN )" 							>>./Makefile.01
if [[ -f clip-xml.ok ]] ; then
	VarX=" "
	[ -f clip-ui.ok ] && VarX="Y"
	[ -f clip-ui.no ] && VarX="N"
	while [[ $VarX != [YyNn] ]] ; do
		OnScreen 2 "Do you want to install library clip-ui : [y/n] :"
		read -n 1 VarX 		>&0
	done
	if [[ "$VarX" = [Yy] ]] ; then
		echo "DIRS_TO_SCAN += clip-ui" 							>>Makefile.01
		echo "DIRS_TO_SCAN += clip-ui" 							>>Makefile.01
		DIRS_TO_SCAN="$DIRS_TO_SCAN clip-ui"
		touch clip-ui.ok
	else
		touch clip-ui.no
	fi
fi
cat Makefile.ini Makefile.01 Makefile.in >Makefile
