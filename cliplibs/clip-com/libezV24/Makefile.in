#
#                                            clip-com/libezV24/Makefile.in
#

Local_Depend = *.h
Depend_on=
PROG = ezV24

RELEASE =
INCDIR =
# the version of the library
VERSION = 0.1
# the release of the library; a change here means, that the API has
# changes. This number is the major number of the above version
SORELEASE = 0
# the patchlevel is the lowest release information. It is incremented
# with each released bugfix.
PATCHLEVEL = 0
# the base name of the library
SOBASE = ezV24

# define the destination OS (currently only linux)
PLATFORM=__LINUX__

# the base path where the file should be installed to.
PREFIX = /usr/local

# generate the name of the output file in dependence of the development state.
#
ifeq "${RELEASE}" "DEBUG"
	NAME = lib$(SOBASE).so.$(SORELEASE).dbg
else
	NAME = lib$(SOBASE).so.$(VERSION)
endif
SONAME = lib$(SOBASE).so.$(SORELEASE)
LIBNAME = lib$(SOBASE)-$(SORELEASE).a
PLAINNAME = lib$(SOBASE).so

# basename of the project
PROJECTNAME = libezV24-$(VERSION).$(PATCHLEVEL)

OBJS = ezV24.o snprintf.o
LIBS =


ifeq "${RELEASE}" "DEBUG"
	C_FLAGS = -c -Wall -fPIC -D$(PLATFORM) $(INCDIR)
	C_DEFS = -DDEBUG -DBETA
else
	ifeq "${RELEASE}" "BETA"
		C_FLAGS = -c -Wall -fPIC -O2 -D$(PLATFORM) $(INCDIR)
		C_DEFS = -DBETA
	else
		C_FLAGS = -c -Wall  -fPIC -O2 -D$(PLATFORM) $(INCDIR)
		C_DEFS = -DFINAL
	endif
endif
ARFLAGS = cru
AR = ar
RANLIB = ranlib

DOC = manual.dxx doc++.conf api-h*
C_FLAGS += $(C_DEFS)

DIRS_TO_SCAN =

export

######################################################################################
###################################################################################### local rules

all: Makefile $(OBJS) shared static

hash1 :

shared:		$(NAME)

static:		$(LIBNAME)

include $(Makefile_o_in)

$(NAME):	$(OBJS) Makefile
		$(E_mkSl)gcc -shared -W1,soname,$(SONAME) -o $(NAME) $(OBJS)
		$(E_ln)ln -sf$(V) $@ $(PLAINNAME)

$(LIBNAME):	$(OBJS) Makefile
		$(E_mkl)$(CLIP_MAKELIB) $(LIBNAME) $(OBJS)
		$(E_mkl)ranlib $(LIBNAME)


#ezV24.o:	ezV24.c ezV24.h ezV24_config.h snprintf.h Makefile
#	$(E_if)if [ -f $(subst .o,.g,$@) ] ; then 		\
#		$(Trace_c_d) ; 										\
#		$(CC) -g $(C_FLAGS) -c $< ; 						\
#	else 															\
#		$(Trace_c) ; 											\
#		$(CC) $(C_FLAGS) -c $< ; 							\
#	fi

#snprintf.o:	snprintf.c snprintf.h Makefile
#	$(E_if)if [ -f $(subst .o,.g,$@) ] ; then 		\
#		$(Trace_c_d) ; 										\
#		$(CC) -g $(C_FLAGS) -c $< ; 						\
#	else 															\
#		$(Trace_c) ; 											\
#		$(CC) $(C_FLAGS) -c $< ; 							\
#	fi

cfg :

install : all install-doc

cleanc :
	$(E_rm)rm -rf$(V) $(TARGET).* *.a *.so *.so.* *.exe

distcleanc :
	$(E_rm)rm -rf$(V) *.g

include $(Makefile_end_in)


