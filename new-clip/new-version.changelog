The object of these new clip compiler and libraries is to make a compiler written in XBase/Clipper language.

For this :

	1.	Split all source files in subdirectory to know where are the functions/procedures;
		e.g. : 	compiler/ci_clip.h 	to #include "ci_clip_h/typedef_struct_ClipMachine.h"
														ci_clip_h/typedef_struct_ClipMachine.h

					include/clip.c			to	#include "clip_c/void_get_opt.h"
														clip_c/void_get_opt.h
													#include "clip_c/static_struct_option_long_options.h"
														clip_c/static_struct_option_long_options.h

	2.	Modify names to have long explicit names (commented writing and coding);

		For the moment, modifying the names of variables by :
			prefix "typedef_" if any;
			suffix _of_typedef if any;

	3.	Write real "C" functions for explicit works and not hash coded with garbage numbers;



2009-12-06 : Angelo GIRARDI

	- 	Replaced all instance ClipMachine *cm and ClipMachine *mp
		by ClipMachine *ClipMachineMemory => LongNames use.

	-	Replaced all instance from ClipVartype :
		UNDEF_t
		CHARACTER_t
		NUMERIC_t
		LOGICAL_t
		DATE_t
		ARRAY_t
		MAP_t
		OBJECT_t
		CCODE_t
		PCODE_t
		MEMO_T
		DATETIME_t	to 	*ype_ClipVarType

	-	Replaced all instance from ClipFlags :
		F_NONE
		F_MPTR
		F_MSTAT
		F_MREF		to 	*_ClipFlags