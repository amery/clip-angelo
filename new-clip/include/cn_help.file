/*
TextBlock := "
The list of options follows.

-h, --help
	This help

-H, --help-environment
	display a short help about acceptable environment variables and exit;
	see more detailed information in the chapter Environment variables

-a, --auto-memvar[=1|0]
	declare any variable included in a PRIVATE, PUBLIC, or PARAMETERS statement as MEMVAR

-c, --compile
	stop after generation C code

-C, --show-command
	print command definitions at the preprocessing stage

-d<name>, --outdir=<name>
	define the location of the output object files

-D<name>, --define=<name>
	define macro <name>

-D<name=value>, --define=<name=value>
	define macro <name> as <value>

-e, --exec
	generate executable file

-E<name>=<value>, --environment=<name>=<value>
	set <name> environment variable's value to <value> for a compilation time

-g,-b, --debug[=1|0]
	include debugging information in the object file

-I<path>, --include-path=<path>
	add the specified directory to the INCLUDE path list

-l, --c-pcode
	compile in C+P-code mode; smaller size of an output file, either an object or an executable

-L<path>, --library-path=<path>
	add the specified directory to the list of path that CLIP will search for libraries

-M, --main
	use the code of the first file in the file list as a program start point
	(automatic definition of the MAIN procedure)

-n, --nomain
	suppress the automatic definition of a procedure with the same name as the program file (.prg)

-N, --names
	generate warnings about unresolved function names;
	see CLIP_NAMES environment variable description in the chapter Environment variable

-o<name>, --output=<name>
	place executable in file <name>

-O[n], --optimise[=<val>]
	set optimisation level for C compiler

-p, --pcode
	generate pseudocode (P-code) module; see Load() function description

-P, --preprocess
	stop after the preprocessing stage;
	the output is preprocessed source code, which is sent to the standard output

-q<word>, --compat=<word>
	set syntax compatability mode; possible values:
		no-as-word - AS clause in variables definitions is not acceptable; it's default behavior
		as-word - AS clause in variables defintions is acceptable

-r, --shared-exec
	always when possible link with shared libraries; smaller size of an executable

-R, --noremove-c
	do not remove temporary '.c' files

-s, --shared
	create an shared object;
	when used with -e option it results in linking with shared run-time
	library (libclip.so), which gives a smaller size executable;
	see -r option

-S<charset>, --source-charset=<charset>
	define charset of the string constants used in the source files (.prg);
	CLIP_HOSTCS environment variable is used by default;
	see chapter Environment variables for details

-t, --show-syntax-tree
	print generated program syntax tree

-T<charet>, --target-charset=<charset>
	define charset of the string constants to be used for an application's output;
	CLIP_HOSTCS environment variable is used by default;
	see chapter Environment variables for details

-U[<filename>], --use-std-ch[=<filename>]
	identifies an alternate standard header file to preprocess
	in place of the supplied STD.CH which is used automatically

-v[<level>], --verbose[=<level>]
	set/increase verbose level; possible values of <level> are
	from 0 (silent) to 6 (most verbose);
	default is 1

-V, --version
	display CLIP compiler version and exit

-w, --namespace-warning[=1|0]
	generate warning messages for undeclared or unaliased (ambiguous) variable references

--static,--full-static
	Don`t use shared libraries, ignore -r -s switches, include all CLIP or system libraries to executable file.

"

TextHelp2 := "
clip can accept next environment variables:

CC
	name of C compiler (default=='gcc')

CDBG
	debug flag for C compiler (default=='-g')

CFLAGS
	options for C compiler (default=='')

CLIP_CMDSTR
	comma-separated list of command-line options

CLIPLIB
	runtime support library (default=='libclip.a')

CLIPLIBS
	additional libs (default=='')

CLIP_LOCALE_ROOT
	root for locale messages

CLIP_MODULE
	current locale module (default=='include')

CLIP_NAMES
	generate .ex, .nm files (possible values yes/no|on/off|0/1)

CLIPROOT
	root for all clip related files (default== )

CLIPSLIB
	runtime support shared library (default=='libclip.so')

COMPILE_FLAG
	'compile-only' flag for C compiler (default=='-c')

COPT
	optimisation flag for C compiler (default=='-O2')

INCLUDE_FLAG
	include flag for C compiler (default=='-I')

LIBSUF
	suffix for library files (default=='.a')

OBJSUF
	suffix for output object files (default=='.o')

OUT_FLAG
	output flag for C compiler (default=='-o')

SFLAGS
	options for C compiler - shared version (default=='-shared')

SLIBSUF
	suffix for shared library files (default=='.so')

SOBJSUF
	suffix for output shared files (default=='.so')

CLIP_LANG
	(if the command line switches -T and -S are not set and the file .clipcharset is not present).
	If this variable isn't set, the consindent value takes from LANG variable

CLIP_HOSTCS
	(default - value of CLIP_LANG in compilation time)

CLIP_CLIENTCS
	(default - value of CLIP_LANG in compilation time).

CLIP_LOCALE
	main variable, which defines a charset, used by CLIP-program.
	If it isn't set, then CLIP_CLIENTCS, CLIP_CHARSET and CHARSET will be checked

CLIP_LOGLEVEL

CLIP_SCANMODE
	defines the working mode for terminal (possible values: no, ioctl, terminal)

CLIP_SCANSTART
	defines the sequence for turn-on scancodes passong (for example \033[R)

CLIP_SCANSTOP
	defines the sequence for turn-off scancodes passong (for example \033[S)

CLIP_KEYMAP
	keyboard-map description for the CLIP keyboard driver

CLIP_LINECHARS
	symbols for the single pseudographics

CLIP_DLINECHARS
	symbols for the double pseudographics

CLIP_COLORMAP
	recode table for the colours predefined macros:

	__BASE_FILE__ 			string 	- name of root compile file
	__CLIP__ 				string 	- version of clip
	__CLIP_MODULE__		string 	- name of current locale module
	__DATE__ 				string 	- date in format 'MON DD YYYY'
	__FILE__ 				string 	- name of current compile file
	__LINE__ 				numeric 	- number of current line in current file
	__SYSTEM__ 				string 	- name of operating system
	__TIME__ 				string 	- current time in format 'HH:MM::SS'
	__VERSION__ 			string 	- version of clip
"
*/
