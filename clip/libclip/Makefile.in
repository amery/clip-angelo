#
#                                            clip/libclip/Makefile.in
#
# main parts
#
#
Local_Depend 		= 		../include/*.ch 	\
					../include/*.h

LIB					= 		libclip.a
SLIB					= 		libclip$(DLLSUFF)
SLIBREAL 			= 		libclip$(DLLREALSUFF)
EXTOBJS 				=
RDDBASE 				= 		libcliprdd/libcliprdd.a
CLASSLIB 			= 		libclipclasses/libclipclasses.a
FUNCSLIB 			= 		libclipfunctions/libclipfunctions.a
SCREEN 				= 		libclipscreen/libclipscreen.a
TERMCAP 				=
#screen/libtermcap.a
SQL 					= 		libclipdbfsql/libclipdbfsql.a
BASES 				=  	$(RDDBASE) 							\
								libclipmain/libclipmain.a

ALIBS 				= 		$(BASES)  		\
								$(SCREEN)  		\
								$(TASK)  		\
								$(TERMCAP)  	\
								$(DBGLIB)  		\
								$(CLASSLIB)  	\
								$(FUNCSLIB)  	\
								$(SQL)

DIRS_TO_SCAN 		= 		 							\
								libclipclasses  		\
								libclipdbfsql  		\
								libclipfunctions  	\
								libclipmain  			\
								libcliprdd  			\
								libclipscreen  		\
								libcliptask

export

######################################################################################
###################################################################################### local rules

all: Makefile links $(DIRS_TO_SCAN) $(LIB) $(SLIB)

hash1 :

cfg :
	$(E_ln)[ -d compiler ] 							\
		|| ln -sf$(V) ../compiler ./
	$(E_ln)[ -d libclipclasses ] 					\
		|| ln -sf$(V) ../libclipclasses ./
	$(E_ln)[ -d libclipdbfsql ] 					\
		|| ln -sf$(V) ../libclipdbfsql ./
	$(E_ln)[ -d libclipfunctions ] 				\
		|| ln -sf$(V) ../libclipfunctions ./
	$(E_ln)[ -d libclipmain ] 						\
		|| ln -sf$(V) ../libclipmain ./
	$(E_ln)[ -d libcliprdd ] 						\
		|| ln -sf$(V) ../libcliprdd ./
	$(E_ln)[ -d libclipscreen ] 					\
		|| ln -sf$(V) ../libclipscreen ./
	$(E_ln)[ -d libcliptask ] 						\
		|| ln -sf$(V) ../libcliptask ./
	$(E_ln)[ -d charsets ] 											\
		|| ln -sf$(V) ../libclipscreen/install/charsets .

links: cfg

trans: clip_trans inst_dir inst_screen

clip.1: clip.html
	htex -o man clip.html

$(LIB): $(ALIBS) $(EXTOBJS) $(MLIB) Makefile $(CLIP)
	$(E_e)$(Trace_lib)
	$(E_rm)rm -f$(V) $(LIB) $(SLIB) libclip.nm libclip.ex
	$(E_mkl)$(Clip_B_Dir)/joinlib$(SCRIPTSUFF) $(LIB) $(ALIBS) $(MLIB)
	$(E_mkl)ranlib $(LIB)

$(SLIB): $(LIB)  Makefile $(CLIP)#test.o
	$(E_e)$(Trace_lib)
#	CLIPROOT=`pwd`
	$(E_mkSl)$(CLIP_MAKESLIB) $(SLIB) $(LIB) $(ADDLIBS)

cleanc :$(DIRS_TO_SCAN)
	$(E_rm)rm -f$(V) charsets
	$(E_rm)rm -Rf$(V) bin libclip*
	$(E_rm)rm -f$(V) $(BINS) *.b test dtest bin locale.pot

distcleanc: clean
	$(E_rm)rm -f$(V) configure.flags
	$(E_rm)rm -f$(V) 	Makefile clipcfg.sh clipcfg.h clip_msgmerge$(SCRIPTSUFF) 			\
							clip_msgfmt$(SCRIPTSUFF) clip_makeslib$(SCRIPTSUFF) clip_makelib$(SCRIPTSUFF) \
							clip_cp$(SCRIPTSUFF) license.txt license.h
	$(E_rm)rm -f$(V) cliproot
	$(E_rm)rm -rf$(V) *.g

pot:
	mkdir -p locale.pot/clip
	xgettext --language=C \
		 --keyword \
		 --keyword=yyerror \
		 --keyword=yywarning \
		 --keyword=v_printf:2 \
		 --keyword=_clic_gettext \
		 --keyword=_clic_ngettext:1,2 \
		 --keyword=_clic_ngettext:2 \
		 --omit-header --output=locale.pot/clip/clip.pot \
		 *.c
	mkdir -p locale.pot/cliprt
	xgettext --language=C \
		 --keyword \
		 --keyword=_clip_gettext \
		 --keyword=_clip_logg:2 \
		 --keyword=_clip_trap_str:4 \
		 --keyword=_clip_trap_printf:4 \
		 --keyword=_clip_trap_printv:4 \
		 --omit-header --output=locale.pot/cliprt/cliprt.pot \
		 *.c libcliprdd/*.c libclipscreen/*.c
	CLIP_LOCALE_ROOT=`pwd` tools/clip_msgmerge$(SCRIPTSUFF)


install: all
	$(E_cp)$(CLIP_CP) $(LIB) $(Clip_L_Dir)/
	$(E_e)banner clip 			>&0
	$(E_e)banner library 		>&0
	$(E_e)banner is ok 			>&0

inst_dir:
	$(E_mkD)[ -d $(INSTDIR) ] 									\
		|| mkdir -p$(V) $(INSTDIR)
	$(E_mkD)[ -d $(BINDIR) ] 									\
		|| mkdir -p$(V) $(BINDIR)
	$(E_mkD)[ -d $(INSTDIR)/keymaps ] 						\
		|| mkdir -p$(V) $(INSTDIR)/keymaps
	$(E_mkD)[ -d $(INSTDIR)/include ] 						\
		|| mkdir -p$(V) $(INSTDIR)/include
	$(E_mkD)[ -d $(INSTDIR)/bin ] 							\
		|| mkdir -p$(V) $(INSTDIR)/bin
	$(E_mkD)[ -d $(INSTDIR)/lib ] 							\
		|| mkdir -p$(V) $(INSTDIR)/lib
	$(E_mkD)[ -d $(INSTDIR)/etc ] 							\
		|| mkdir -p$(V) $(INSTDIR)/etc
	$(E_mkD)[ -d $(INSTDIR)/doc ] 							\
		|| mkdir -p$(V) $(INSTDIR)/doc
	$(E_mkD)[ -d $(INSTDIR)/cliprc ] 						\
		|| mkdir -p$(V) $(INSTDIR)/cliprc
	$(E_mkD)[ -d $(INSTDIR)/locale.pot ] 					\
		|| mkdir -p$(V) $(INSTDIR)/locale.pot
	$(E_mkD)[ -d $(INSTDIR)/locale.po ] 					\
		|| mkdir -p$(V) $(INSTDIR)/locale.po
	$(E_mkD)[ -d $(INSTDIR)/locale.po/ru_RU.KOI8-R ] 	\
		|| mkdir -p$(V) $(INSTDIR)/locale.po/ru_RU.KOI8-R
	$(E_mkD)[ -d $(INSTDIR)/locale.mo ] 					\
		|| mkdir -p$(V) $(INSTDIR)/locale.mo

inst_clip:
	$(E_cd)cd $(Clip_B_Dir) \
		&& chmod 0755 $(BINS) $(SCRIPTS) clip_bug$(SCRIPTSUFF) cliphash$(EXESUFF)
	if [ "$(OSNAME)" = CYGWIN ] ; then echo "bash lowname %1 %2 %3 %4 %5 %6 %7 %8 %9" > $(Clip_B_Dir)/lowname.bat ; fi
ifneq ($(BINDIR),$(Clip_B_Dir))
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip$(EXESUFF) 					$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_msgfmt$(SCRIPTSUFF) 		$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_msgmerge$(SCRIPTSUFF) 	$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_makeslib$(SCRIPTSUFF) 	$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_makelib$(SCRIPTSUFF) 	$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_cp$(SCRIPTSUFF) 			$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clipar$(EXESUFF) 				$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/cliphash$(EXESUFF) 				$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_bug$(SCRIPTSUFF) 			$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_dbg$(EXESUFF) 				$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_trans$(EXESUFF) 			$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_conv$(EXESUFF) 			$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_hashextract$(EXESUFF) 	$(BINDIR)/
endif
	$(E_xx)touch $(INSTDIR)/cliprc/.notrm

inst_locale:
	$(E_xx)tar cf - locale.po | (cd $(INSTDIR) && tar xf -)
	$(E_rm)rm -rf$(V) `find $(INSTDIR)/locale.po -type d -name CVS -print`
	$(E_xx)CLIPROOT=$(INSTDIR) $(Clip_B_Dir)/clip_msgfmt$(SCRIPTSUFF) $(INSTDIR)


inst_lib:
	$(E_cp)$(Clip_B_Dir)/clip_cp$(SCRIPTSUFF) $(LIB) $(INSTDIR)/lib
	$(E_cp)cp -f$(V) $(SLIB) $(INSTDIR)/lib; chmod 0755 $(INSTDIR)/lib/$(SLIB)
	$(E_cp)[ "$(SLIBREAL)" = "$(SLIB)" ] || cp -f$(V) $(SLIBREAL) $(INSTDIR)/lib

inst_std_lib:
	$(E_mkD)mkdir -p $(INSTDIR)$(STD_LIBDIR)
	$(E_xx)ls $(INSTDIR)/lib/*$(DLLSUFF)
	$(E_ln)for i in $(INSTDIR)/lib/*$(DLLSUFF); do ln -$(V)s $$i $(INSTDIR)$(STD_LIBDIR) 2>/dev/null || true; done
	$(E_ln)for i in $(INSTDIR)/lib/*$(DLLREALSUFF); do ln -$(V)s $$i $(INSTDIR)$(STD_LIBDIR) 2>/dev/null || true; done
	$(E_ln)for i in $(INSTDIR)/lib/*.a; do ln -$(V)s $$i $(INSTDIR)$(STD_LIBDIR) 2>/dev/null || true; done

inst_screen:
	$(E_xx)cd libclipscreen/install 								\
		&& tar cf - `find . -type f -print |grep -v CVS` 	\
		| (cd $(INSTDIR)$ && tar xf -)

inst_codb:

inst_ch:# $(INST_MEMDEBUG_H)

inst_memdebug_h:
	$(E_xx)tar cf - memdebug/malloc.h memdebug/malloc_str.h \
		| (cd $(INSTDIR)/include && tar xf -)

inst_doc:

inst_xclip:

inst_end:
	$(E_xx)$(Clip_B_Dir)/inst_end$(SCRIPTSUFF) $(INSTDIR) $(BINDIR)

include $(Makefile_end_in)

# DO NOT DELETE



