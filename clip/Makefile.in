##
##										clip/Makefile.in
##
DBGLIB 				=
XINSTALL 			=
INST_STD_LIB 		=
INST_XCLIP 			=
CLIP_CLD 			=
INST_MEMDEBUG_H 	=
RDDBASE 				= 			libcliprdd/libcliprdd.a
CLASSLIB 			= 			libclipclasses/libclipclasses.a
FUNCSLIB 			= 			libclipfunctions/libclipfunctions.a
#CODBLIB 			=
#codb/libclip-codb.a codb/libcodb-query.a
SCREEN 				= 			libclipscreen/libclipscreen.a
TERMCAP 				=
#screen/libtermcap.a
SQL 					= 			libclipdbfsql/libclipdbfsql.a

BASES 				=  												\
										$(RDDBASE) 						\
									libclipmain/libclipmain.a

ALIBS 				= 								\
									$(BASES) 		\
									$(SCREEN) 		\
									$(TASK) 			\
									$(TERMCAP) 		\
									$(DBGLIB) 		\
									$(CLASSLIB) 	\
									$(FUNCSLIB) 	\
									$(SQL)

DIRS_TO_SCAN 		= 									\
									include 				\
									include.h 			\
									tools 				\
									compiler 			\
									libclipclasses 	\
									libclipdbfsql 		\
									libclipfunctions 	\
									libclipmain 		\
									libcliprdd 			\
									libclipscreen 		\
									libcliptask 		\
									libclip

export

######################################################################################
###################################################################################### local rules

all: Makefile $(DIRS_TO_SCAN)

cfg : inst_dir inst_screen links

hash1 :
#Makefile $(DIRS_TO_SCAN)

links:
	$(E_ln)[ -d charsets ] || ln -sf$(V) libclipscreen/install/charsets .

trans: clip_trans inst_dir inst_screen

clip.1: clip.html
	htex -o man clip.html

cleanc : $(DIRS_TO_SCAN)
	$(E_rm)rm -f$(V) *.ex *.nm charsets
	$(E_rm)rm -Rf$(V) bin
	$(E_rm)cd include.h 			\
		&& rm -rf 	*.bak 		\
						*.log 		\
						*core 		\
						core*
	$(E_rm)[ ! -f tests/Makefile ] 	\
		|| (cd tests 						\
				&& $(MAKE) clean			\
			)
	$(E_rm)[ ! -f libclipmemdebug/Makefile ] 	\
		|| (cd libclipmemdebug 						\
				&& $(MAKE) clean 						\
			)
	$(E_rm)rm -f$(V) 	$(BINS) 		\
							*.out 		\
							*.o 			\
							*.a 			\
							*.so 			\
							*.dll 		\
							*.pa 			\
							*.b 			\
							*.BAK 		\
							*.bak 		\
							*~ core* 	\
							*core			\
							*.output 	\
							test 			\
							dtest 		\
							bin 			\
							*.exe 		\
							locale.pot 	\
							license.h

distcleanc: clean
	$(E_rm)rm -f$(V) configure.flags
	$(E_rm)rm -f$(V) Makefile

cleantest:
	$(E_rm)rm -f$(V) test dtest *.pa test.o dtest.o
	$(E_rm)cd tests && $(MAKE) clean

pot:
	mkdir -p locale.pot/clip
	xgettext --language=C \
		 --keyword \
		 --keyword=yyerror \
		 --keyword=yywarning \
		 --keyword=v_printf:2 \
		 --keyword=_clic_gettext \
		 --keyword=_clic_ngettext:1,2 \
		 --keyword=_clic_ngettext:2 \
		 --omit-header --output=locale.pot/clip/clip.pot \
		 *.c
	mkdir -p locale.pot/cliprt
	xgettext --language=C \
		 --keyword \
		 --keyword=_clip_gettext \
		 --keyword=_clip_logg:2 \
		 --keyword=_clip_trap_str:4 \
		 --keyword=_clip_trap_printf:4 \
		 --keyword=_clip_trap_printv:4 \
		 --omit-header --output=locale.pot/cliprt/cliprt.pot \
		 *.c libcliprdd/*.c libclipscreen/*.c
	CLIP_LOCALE_ROOT=`pwd` tools/clip_msgmerge$(SCRIPTSUFF)


install: all inst_dir inst_clip $(XINSTALL) inst_codb 			\
	 inst_screen inst_ch inst_locale $(INST_STD_LIB) inst_doc 	\
	 inst_end

inst_dir:
	$(E_mkD)[ -d $(INSTDIR) ] 									\
		|| mkdir -p$(V) $(INSTDIR)
	$(E_mkD)[ -d $(BINDIR) ] 									\
		|| mkdir -p$(V) $(BINDIR)
	$(E_mkD)[ -d $(INSTDIR)/keymaps ] 						\
		|| mkdir -p$(V) $(INSTDIR)/keymaps
	$(E_mkD)[ -d $(INSTDIR)/include ] 						\
		|| mkdir -p$(V) $(INSTDIR)/include
	$(E_mkD)[ -d $(INSTDIR)/include/libclipmemdebug ] 	\
		|| [ ! -d libclipmemdebug ] 							\
		|| mkdir -p$(V) $(INSTDIR)/include/libclipmemdebug
	$(E_mkD)[ -d $(INSTDIR)/bin ] 							\
		|| mkdir -p$(V) $(INSTDIR)/bin
	$(E_mkD)[ -d $(INSTDIR)/lib ] 							\
		|| mkdir -p$(V) $(INSTDIR)/lib
	$(E_mkD)[ -d $(INSTDIR)/etc ] 							\
		|| mkdir -p$(V) $(INSTDIR)/etc
	$(E_mkD)[ -d $(INSTDIR)/doc ] 							\
		|| mkdir -p$(V) $(INSTDIR)/doc
	$(E_mkD)[ -d $(INSTDIR)/cliprc ] 						\
		|| mkdir -p$(V) $(INSTDIR)/cliprc
	$(E_mkD)[ -d $(INSTDIR)/locale.pot ] 					\
		|| mkdir -p$(V) $(INSTDIR)/locale.pot
	$(E_mkD)[ -d $(INSTDIR)/locale.po ] 					\
		|| mkdir -p$(V) $(INSTDIR)/locale.po
	$(E_mkD)[ -d $(INSTDIR)/locale.po/ru_RU.KOI8-R ] 	\
		|| mkdir -p$(V) $(INSTDIR)/locale.po/ru_RU.KOI8-R
	$(E_mkD)[ -d $(INSTDIR)/locale.mo ] 					\
		|| mkdir -p$(V) $(INSTDIR)/locale.mo

inst_clip:
	$(E_cd)cd $(Clip_B_Dir) \
		&& chmod 0755 $(BINS) clip_bug$(SCRIPTSUFF) cliphash$(EXESUFF)
	$(E_xx)if [ "$(OSNAME)" = CYGWIN ] ; then echo "bash lowname %1 %2 %3 %4 %5 %6 %7 %8 %9" > $(Clip_B_Dir)/lowname.bat ; fi
ifneq ($(BINDIR),$(Clip_B_Dir))
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip$(EXESUFF) 					$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_msgfmt$(SCRIPTSUFF) 	$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_msgmerge$(SCRIPTSUFF) 	$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_makeslib$(SCRIPTSUFF) 	$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_makelib$(SCRIPTSUFF) 	$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_cp$(SCRIPTSUFF) 			$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clipar$(EXESUFF) 				$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/cliphash$(EXESUFF) 			$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_bug$(SCRIPTSUFF) 		$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_dbg$(EXESUFF) 			$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_trans$(EXESUFF) 			$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_conv$(EXESUFF) 			$(BINDIR)/
	$(E_ln)ln -sf$(V) $(Clip_B_Dir)/clip_hashextract$(EXESUFF) 	$(BINDIR)/
endif
	$(E_xx)touch $(INSTDIR)/cliprc/.notrm

inst_locale:
	$(E_cp)cp --remove-destination -Rfpu$(V) locale.po/* $(INSTDIR)/locale.po
	$(E_rm)rm -rf$(V) `find $(INSTDIR)/locale.po -type d -name CVS -print`
	$(E_xx)CLIPROOT=$(INSTDIR) clip_msgfmt$(SCRIPTSUFF) $(INSTDIR)

inst_lib:

inst_std_lib:

inst_screen:

inst_codb:

inst_ch: $(INST_MEMDEBUG_H)

inst_memdebug_h:

inst_doc:

inst_xclip:

inst_end:
	$(E_xx)inst_end$(SCRIPTSUFF) $(INSTDIR) $(BINDIR)

depend:
	makedepend -Y  -- $(C_FLAGS) -- $(SRCS) 2>/dev/null

commit:
	./_cvs_commit

update:
	./_cvs_update

ucommit:
	./_cvs_commit
	./_cvs_update

shell:
	sh

include $(Makefile_end_in)

# DO NOT DELETE

