/*
 * defines for malloc string routines...
 *
 * Copyright 1992 by Gray Watson and the Antaire Corporation
 *
 * This file is part of the malloc-debug package.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library (see COPYING-LIB); if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 * The author of the program may be contacted at gray.watson@antaire.com
 *
 * $Id: malloc_str.h,v 1.1 2006/06/22 19:35:30 itk Exp $
 */

#ifndef __MALLOC_STR_H__
#define __MALLOC_STR_H__

/*<<<<<<<<<<  The below prototypes are auto-generated by fillproto */

/*
 * dummy function for checking bcmp's arguments.
 */
	int	_malloc_bcmp(const char *msg, const void * b1, const void * b2, int len);

/*
 * dummy function for checking bcopy's arguments.
 */
	void	_malloc_bcopy(const char *msg, const void * from, void * to, int len);

/*
 * dummy function for checking memcmp's arguments.
 */
	int	_malloc_memcmp(const char *msg, const void * b1,
			       const void * b2, int len);

/*
 * dummy function for checking memcpy's arguments.
 */
	char	*_malloc_memcpy(const char *msg, void * to, const void * from, int len);

/*
 * dummy function for checking memset's arguments.
 */
	char	*_malloc_memset(const char *msg, void * buf, char ch, int len);

/*
 * dummy function for checking index's arguments.
 */
	char	*_malloc_index(const char *msg, const char * str, char ch);

/*
 * dummy function for checking rindex's arguments.
 */
	char	*_malloc_rindex(const char *msg, const char * str, char ch);

/*
 * dummy function for checking strcat's arguments.
 */
	char	*_malloc_strcat(const char *msg, char * to, const char * from);

/*
 * dummy function for checking strcmp's arguments.
 */
	int	_malloc_strcmp(const char *msg, const char * s1,
			       const char * s2);

/*
 * dummy function for checking strlen's arguments.
 */
	int	_malloc_strlen(const char *msg, const char * str);

/*
 * dummy function for checking strtok's arguments.
 */
	char	*_malloc_strtok(const char *msg, char * str, const char * sep);

/*
 * dummy function for checking bzero's arguments.
 */
	void	_malloc_bzero(const char *msg, void * buf,
			      int len);

/*
 * dummy function for checking memccpy's arguments.
 */
	char	*_malloc_memccpy(const char *msg, void * s1, const void * s2, char ch, int len);

/*
 * dummy function for checking memchr's arguments.
 */
	char	*_malloc_memchr(const char *msg, const void * s1, char ch, int len);

/*
 * dummy function for checking strchr's arguments.
 */
	char	*_malloc_strchr(const char *msg, const char * str, char ch);

/*
 * dummy function for checking strrchr's arguments.
 */
	char	*_malloc_strrchr(const char *msg, const char * str, char ch);

/*
 * dummy function for checking strcpy's arguments.
 */
	char	*_malloc_strcpy(const char *msg, char * to, const char * from);

/*
 * dummy function for checking strncpy's arguments.
 */
	char	*_malloc_strncpy(const char *msg, char * to, const char * from, int len);

/*
 * dummy function for checking strcasecmp's arguments.
 */
	int	_malloc_strcasecmp(const char *msg, const char * s1, const char * s2);

/*
 * dummy function for checking strncasecmp's arguments.
 */
	int	_malloc_strncasecmp(const char *msg, const char * s1, const char * s2, int len);

/*
 * dummy function for checking strspn's arguments.
 */
	int	_malloc_strspn(const char *msg, const char * str, const char * list);

/*
 * dummy function for checking strcspn's arguments.
 */
	int	_malloc_strcspn(const char *msg, const char * str, const char * list);

/*
 * dummy function for checking strncat's arguments.
 */
	char	*_malloc_strncat(const char *msg, char * to, const char * from, int len);

/*
 * dummy function for checking strncmp's arguments.
 */
	int	_malloc_strncmp(const char *msg, const char * s1, const char * s2, int len);

/*
 * dummy function for checking strpbrk's arguments.
 */
	char	*_malloc_strpbrk(const char *msg, const char * str, const char * list);

/*
 * dummy function for checking strstr's arguments.
 */
	char	*_malloc_strstr(const char *msg, const char * str, const char * pat);

/*<<<<<<<<<<   This is end of the auto-generated output from fillproto. */

#endif /* ! __MALLOC_STR_H__ */
