#
#                                            clip/libclipmain/Makefile.in
#
Local_Depend 	= 		../include/*.ch 		\
							../include/*.h

c_files 			= 		$(sort 							\
										cliphash.c 			\
										rt.tab.c 			\
										_file1.c 			\
										_string.c 			\
										_date.c 				\
	   								clipbase.c 			\
										_math.c 				\
										diskutils.c 		\
										_mem.c 				\
	   								_system.c 			\
										rational.c 			\
										integer.c 			\
										gettext.c 			\
										_dbg.c 				\
	   								_tcp.c 				\
										_tcpserv.c 			\
										_regex.c 			\
										ncp.c 				\
										_clipboard.c 		\
										_depsort.c 			\
	   								_ctools_s.c 		\
										_file.c  			\
										_io.c 				\
										_thread.c 			\
										_util.c  			\
	   								clipdbg.c 			\
										clipruntime.c 		\
										cliptbl.c 			\
										clipvm.c 			\
	   								hash.c 				\
										set.c 				\
										coll.c 				\
										list.c 				\
										plural.tab.c 		\
										_win32.c 			\
	   					)

ADDOBJS 			= 		../libclipscreen/charset.o
PROG 				= 		clipmain
ADDLIBS =
o_files 				= 			$(addsuffix .o, $(basename $(prg_files) $(c_files) ) )
SRC_C_files 		= 			$(c_files) clip.y clic_c.lex hasher.lex plural.y rt.y clic.lex clic.y
SRC_PRG_files 		= 			$(sort $(prg_files) )

export

######################################################################################
###################################################################################### local rules

install all : Makefile lex $(o_files) $(ATARGET)

hash1 :
	$(E_xx)$(Clip_M_Dir)/init/LinkAllFiles.sh clip-libclipmain

cfg : lex
	$(E_ln)[ -d charsets ] 												\
		|| ln -sf$(V) ../libclipscreen/install/charsets .

cleanc :
	$(E_rm)rm -f$(V) 	*.b *.tmp test_ref.c test.c test.log 	\
							*.dbf *.ntx *.cdx *.dbt *.fpt 			\
							test $(ATARGET)

distcleanc :
	$(E_rm)rm -rf$(V) *.g

include $(Makefile_o_in)

../libclipscreen/charset.o : ../libclipscreen/charset.c Makefile
	$(E_cd)cd ../libclipscreen  															\
		&& ( [ -f Makefile ] || ( [ -x $(CONFIGURE_SH) ] && $(CONFIGURE_SH) $(MAKECMDGOALS) ) )	\
		&& $(MAKE) charset.o $(MAKEFLAGS) $(ADDMAKECMDGOALS)

plural.tab.o : plural.tab.c Makefile
	$(E_cc)if [ -f $(subst .o,.g,$@) ] ; then 	\
		$(Trace_cc_d) ; 									\
		$(CC) $(C_FLAGS) -g -c $< ; 					\
	else 														\
		$(Trace_cc) ; 										\
		$(CC) $(C_FLAGS) -c $< ; 						\
	fi

clic.tab.o : clic.tab.c ../include/ci_clic.h Makefile
	$(E_cc)if [ -f $(subst .o,.g,$@) ] ; then 	\
		$(Trace_cc_d) ; 									\
		$(CC) $(C_FLAGS) -g -c $< ; 					\
	else 														\
		$(Trace_cc) ; 										\
		$(CC) $(C_FLAGS) -c $< ; 						\
	fi

lex.yy.o : lex.yy.c Makefile
	$(E_cc)if [ -f $(subst .o,.g,$@) ] ; then 	\
		$(Trace_cc_d) ; 									\
		$(CC) $(C_FLAGS) -g -c $< ; 					\
	else 														\
		$(Trace_cc) ; 										\
		$(CC) $(C_FLAGS) -c $< ; 						\
	fi

lex.cl.o : lex.cl.c Makefile
	$(E_cc)if [ -f $(subst .o,.g,$@) ] ; then 	\
		$(Trace_cc_d) ; 									\
		$(CC) $(C_FLAGS) -g -c $< ; 					\
	else 														\
		$(Trace_cc) ; 										\
		$(CC) $(C_FLAGS) -c $< ; 						\
	fi

clicutil.o : clicutil.c clic.tab.h Makefile
	$(E_cc)if [ -f $(subst .o,.g,$@) ] ; then 	\
		$(Trace_cc_d) ; 									\
		$(CC) $(C_FLAGS) -g -c $< ; 					\
	else 														\
		$(Trace_cc) ; 										\
		$(CC) $(C_FLAGS) -c $< ; 						\
	fi

clic_name.o : clic_name.c Makefile
	$(E_cc)if [ -f $(subst .o,.g,$@) ] ; then 	\
		$(Trace_cc_d) ; 									\
		$(CC) $(C_FLAGS) -g -c $< ; 					\
	else 														\
		$(Trace_cc) ; 										\
		$(CC) $(C_FLAGS) -c $< ; 						\
	fi

###################################################### yacc - flex

clic_name.c : clic.tab.c Makefile
	$(E_e)$(Trace)
	$(E_e)echo "#include <stdio.h>" 													 >clic_name.c
	$(E_e)echo "#ifndef YYDEBUG" 														>>clic_name.c
	$(E_e)echo "#define YYDEBUG 0" 													>>clic_name.c
	$(E_e)echo "#endif" 																	>>clic_name.c
	$(E_e)echo "#if !YYDEBUG" 															>>clic_name.c
	$(E_e)echo "#define static" 														>>clic_name.c
	$(E_e)sed -n -e "/^\(.*\)yytname[ \t]*\[\]/,/^};/p" clic.tab.c 		>>clic_name.c
	$(E_e)echo "int yymaxtoken=sizeof(yytname)/sizeof(char*);" 				>>clic_name.c
	$(E_e)echo "#endif" 																	>>clic_name.c

clic.tab.c : clic.y ../include/ci_clic.h
	$(E_xx)$(YACC) -bclic -v -d clic.y

lex.cl.c : clic_c.lex clic.tab.h
	$(E_e)$(Trace_flex)
	$(E_xx)flex -Pcl clic_c.lex

lex.hash.c : hasher.lex ../include/ci_cliphash.h
	$(E_e)$(Trace_flex)
	$(E_xx)flex -Phash hasher.lex

#note: flex -i for case-insencitive parser
lex.yy.c : clic.lex clic.tab.h
	$(E_e)$(Trace_flex)
	$(E_xx)flex -i clic.lex

plural.tab.c : plural.y
	$(E_e)$(Trace_yacc)
	$(E_xx)$(YACC) -bplural -pplural plural.y

rt.tab.c : rt.y ../include/ci_clic.h
	$(E_e)$(Trace_yacc)
	$(E_xx)$(YACC) -brt -prt -v -d rt.y

lex : yacc Makefile
# lex.yy.c lex.cl.c lex.hash.c
yacc : rt.tab.c plural.tab.c Makefile
#clic.tab.c clic_name.c
include $(Makefile_end_in)

