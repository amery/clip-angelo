$FUNCNAME$
  AT()
$CATEGORY$
  STRING
$SUMMARY$
   Return the position of a substring within a character string
$LANG_RU$
   Возвращает позицию подстроки в символьной строке.
$SYNTAX$
     AT(<cSearch>, <cTarget>) --> nPosition
$LANG_RU$
     AT(<подстрока поиска>,<строка>) --> номер позиции
$ARGUMENTS$
     <cSearch> is the character substring to be searched for.
     <cTarget> is the character string to be searched.
$LANG_RU$
     <подстрока поиска> - символьная подстрока для поиска.
     <строка> - символьная строка, в которой ведется поиск.
$RETURNS$
     AT() returns the position of the first instance of <cSearch> within
     <cTarget> as an integer numeric value.  If <cSearch> is not found, AT()
     returns zero.
$LANG_RU$
     AT() возвращает номер позиции первого появления подстроки <подстрока
     поиска> в строке <строка> в виде арифметического значения. Если
     подстрока <подстрока поиска> не найдена, AT() возвращает нуль.
$DESCRIPTION$

     AT() is a character function used to determine the position of the first
     occurrence of a character substring within another string.  If you only
     need to know whether a substring exists within another string, use the $
     operator.  To find the last instance of a substring within a string, use
     RAT().


$LANG_RU$

     AT() - функция работы с символьными строками, которая определяет
     позицию первого появления символьной подстроки <подстрока поиска>
     в строке <строка>. Для определения последнего появления подстроки
     в строку, используется функция RAT().


$EXAMPLES$

       These examples show typical use of AT():

	? AT("a", "abcde")                  // Result: 1
	? AT("bcd", "abcde")                // Result: 2
	? AT("a", "bcde")                   // Result: 0

       This example splits a character string based on the position
	of a comma within the target string:

	cTarget := "Langtree, Lilly"
	? SUBSTR(cTarget, 1, AT(",", cTarget) - 1)
	// Result: Langtree

	? SUBSTR(cTarget, AT(",", cTarget) + 2)
	// Result: Lilly


$LANG_RU$

      Этот пример демонстрирует работу функции AT():

       ? AT("a","abcde")                           // Результат: 1
       ? AT("bcd","abcde")                         // Результат: 2
       ? AT("a","bcde")                            // Результат: 0

      В этом примере символьная строка делится на части в местах
       появления запятой:

       cTarget = "Langtree, Lilly"
       ? SUBSTR(cTarget, 1, AT(",", cTarget) - 1)  // Результат: Langtree
       ? SUBSTR(cTarget, AT(",", cTarget) + 2 )    // Результат: Lilly


$SEEALSO$
  RAT(),STRTRAN(),SUBSTR()
$END$
