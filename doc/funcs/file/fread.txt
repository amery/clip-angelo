$FUNCNAME$
  FREAD()
$CATEGORY$
  FILE/IO
$SUMMARY$
   Read characters from a binary file into a buffer variable
$LANG_RU$
   Считывает символы из двоичного файла в буферную переменную.
$SYNTAX$
     FREAD(<nHandle>, @<cBufferVar>, <nBytes>) --> nBytes
$LANG_RU$
     FREAD (<номер обраб. файла>,@<имя переменной буфера>,
	  <к-во байтов>) --> к-во байтов
$ARGUMENTS$
     <nHandle> is the file handle obtained from FOPEN(), FCREATE(), or
     predefined by DOS.

     <cBufferVar> is the name of an existing and initialized character
     variable used to store data read from the specified file.  The length of
     this variable must be greater than or equal to <nBytes>.  <cBufferVar>
     must be passed by reference and, therefore, must be prefaced by the pass-
     by-reference operator (@).

     <nBytes> is the number of bytes to read into the buffer.
$LANG_RU$
     <номер обраб. файла> - это номер обрабатываемого файла, полученного с
     помощью функций FOPEN(), FCREATE() или предварительно определенный в
     DOS.

     <имя переменной буфера> - имя существующей и проинициализированной
     переменной, используемой для сохранения данных, считанных из
     заданного файла. Длина этой переменной должна быть больше или равна
     значению аргумента <к-во байтов>. <имя переменной буфера> передается
     по ссылке, и поэтому ему должен предшествовать оператор "передача по
     ссылке" (@).

     <к-во байтов> - это количество байтов, которое должно быть считано в
     буфер. Значение, возвращаемое при успешном завершении FREAD(), должно
     быть равно значению аргумента <к-во байтов>.
$RETURNS$
     FREAD() returns the number of bytes successfully read as an integer
     numeric value.  A return value less than <nBytes> or zero indicates end
     of file or some other read error.
$LANG_RU$
     FREAD() возвращает целое числовое значение, равное количеству успешно
     считанных байтов. Возвращаемое значение, меньшее чем <к-во байтов>
     или равное нулю, указывает на конец файла или какую-либо другую
     ошибку считывания.
$DESCRIPTION$
     FREAD() is a low-level file function that reads characters from a binary
     file into an existing character variable.  It reads from the file
     starting at the current DOS file pointer position, advancing the file
     pointer by the number of bytes read.  All characters are read including
     control, null, and high-order (above CHR(127)) characters.

     FREAD() is similar in some respects to both FREADSTR() and FSEEK().
     FREADSTR() reads a specified number of bytes from a file up to the next
     null (CHR(0)) character.  FSEEK() moves the file pointer without
     reading.

     If there is an error during the file read, FERROR() returns the DOS
     error number.  See FERROR() for the list of error numbers.

     Warning!  This function allows low-level access to DOS files and
     devices.  It should be used with extreme care and requires a thorough
     knowledge of the operating system.
$LANG_RU$
     FREAD() - это функция обработки файлов низкого уровня, которая
     считывает символы из двоичного файла в указанную переменную. Она
     считывает файл, начиная от текущей позиции указателя в файле DOS,
     продвигая этот указатель на количество считанных байтов. Считываются
     все символы, включая управляющие, нулевые и символы, имеющие значения
     кодов более CHR(127).

     FREAD() до некоторой степени похожа на функции FREADSTR() и FSEEK().
     FREADSTR() считывает заданное количество байтов из файла до
     следующего нулевого кода (CHR(0)). FSEEK() лишь перемещает указатель
     без считывания.

     Если во время считывания файла возникает ошибка, то функция FERROR()
     возвращает код этой ошибки DOS. Для ознакомления с перечнем кодов
     ошибок смотри описание функции FERROR().

     Предупреждение:
     Данная функция позволяет осуществлять доступ низкого уровня к файлам
     и устройствам DOS. Она должна использоваться чрезвычайно осторожно и
     требует хороших знаний операционной системы.
$EXAMPLES$
       This example uses FREAD() after successfully opening a file to
	read 128 bytes into a buffer area:

	#define F_BLOCK      128
	//
	cBuffer := SPACE(F_BLOCK)
	nHandle := FOPEN("Temp.txt")
	//
	IF FERROR() != 0
	   ? "File open error:", FERROR()
	ELSE
	   IF FREAD(nHandle, @cBuffer, F_BLOCK) <> F_BLOCK
	      ? "Error reading Temp.txt"
	   ENDIF
	   FCLOSE(nHandle)
	ENDIF
$LANG_RU$
      Следующий пример использует FREAD() после успешного открытия
       файла, чтобы считать 128 байтов в буферную область:

       #define F_BLOCK 128
       //
       cBuffer = SPACE(F_BLOCK)
       nHandle = FOPEN("Temp.txt")
       //
       IF FERROR() != 0
	  ? "Ошибка открытия файла, номер ошибки:", FERROR()
       ELSE
	  IF FREAD(nHandle, @cBuffer, F_BLOCK) <> F_BLOCK
	     ? "Ошибка чтения файла Temp.txt"
	  ENDIF
       ENDIF
$SEEALSO$
  BIN2I(),BIN2L(),BIN2W(),FCLOSE(),FCREATE(),FERROR(),FWRITE()
$END$
