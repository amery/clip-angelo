$FUNCNAME$
  BIN2W()
$CATEGORY$
  CONVERSION,MISCELLANEOUS,NUMERIC
$SUMMARY$
   Convert a 16-bit unsigned integer to a numeric value
$LANG_RU$
   Преобразует 16-битовое целое без знака в числовое значение.
$SYNTAX$
     BIN2W(<cUnsignedInt>) --> nNumber
$LANG_RU$
     BIN2W(<строка символов>) --> целое число
$ARGUMENTS$
     <cUnsignedInt> is a character string in the form of a 16-bit
     unsigned integer number--least significant byte first.  Only the first
     two characters are used by the function; all others are ignored.
$LANG_RU$
     <строка символов> - символьная строка, рассматриваемая как целое
     число без знака, последний значащий байт является первым. Функция
     использует только первые два байта, все остальные игнорируются.
$RETURNS$
     BIN2W() returns an integer numeric value.
$LANG_RU$
     BIN2W() возвращает целое числовое значение.
$DESCRIPTION$
     BIN2W() is a low-level file function that is used with FREAD() to
     convert a two-byte character string formatted as an unsigned integer to
     a xClipper numeric data type.  This is most useful when you are
     reading from a binary file and want to read data in its native format.
$LANG_RU$
     BIN2W() - функция обработки файлов низшего уровня, которая
     используется в комбинации с функцией FREAD() для преобразования
     двухбайтных строк символов, форматированных как целое без знака,
     в числовые величины xClipper. Чаще всего она используется при
     чтении двоичного файла для получения числа в его собственном
     формате.
$EXAMPLES$
       This example opens a database file using low-level file
	functions and reads the number of bytes per record (bytes 10-11).
	The result is the same as with RECSIZE():

	#include "Fileio.ch"
	//
	nHandle := FOPEN("Sales.dbf", FO_READ)
	// Note:  The length of a record in Sales.dbf is 124
	//
	// Point to byte 10, the first record size byte
	FSEEK(nHandle, 10, FS_SET)
	//
	// Read record size
	cRecSize := SPACE(2)
	FREAD(nHandle, @cRecSize, 2)
	//
	? LTRIM(STR(BIN2W(cRecSize)))            // Result: 124
	FCLOSE(nHandle)
$LANG_RU$
      В этом примере открывается файл базы данных, используя функции
       обработки файлов низшего уровня, и считывается количество байтов
       в записях (байты 10-11). Результат тот же, что при использовании
       функции RECSIZE():

       #include "Fileio.ch"
       //
       nHandle = FOPEN("Sales.dbf", FO_READ)
       //
       // Установить указатель на 10-й байт - первый байт переменной,
       // содержащий значение длины записи
       FSEEK(nHandle, 10, FS_SET)
       //
       // Читать длину записи
       cRecSize = SPACE(2)
       FREAD(nHandle, @cRecSize, 2)
       //
       ? LTRIM(STR(BIN2W(cRecSize))) // Результат: 124
       FCLOSE(nHandle)
$SEEALSO$
  BIN2I(),BIN2L(),FREAD(),FREADSTR(),I2BIN(),L2BIN()
$END$
