$FUNCNAME$
  ALERT()
$CATEGORY$
  Menus/Prompts,TERMINAL/IO
$SUMMARY$
   Display a simple modal dialog box
$LANG_RU$
   Выводит на экран простое диалоговое окно.
$SYNTAX$
     ALERT( <cMessage>, [<aOptions>] ) --> nChoice
$LANG_RU$
     ALERT( <сообщение> [,<массив предложений>] ) --> <номер предложения>
$ARGUMENTS$
     <cMessage> is the message text displayed and centered in the alert
     box.  If the message contains one or more semicolons, the text after the
     semicolons is centered on succeeding lines in the dialog box.

     <aOptions> defines a list of up to 4 possible responses to the
     dialog box.
$LANG_RU$
     <сообщение> - определяет сообщение, которое располагается в центре
     диалогового окна. Если аргумент <сообщение> содержит одну или более
     точек с запятой (;), то текст после каждой центрируется на следующей
     строке.

     <массив предложений> - определяет список возможных ответов на
     предложение окна диалога.
$RETURNS$

     ALERT() returns a numeric value indicating which option was chosen.  If
     the Esc key is pressed, the value returned is zero.


$LANG_RU$

     ALERT() возвращает числовое значение, указывающее, какой ответ был
     выбран. Если была нажата клавиша <ESC>, то возвращаемое значение -
     ноль.


$DESCRIPTION$

     The ALERT() function creates a simple modal dialog.  It is useful in
     error handlers and other "pause" functions.  The user can respond by
     moving a highlight bar and pressing the Return or SpaceBar keys, or by
     pressing the key corresponding to the first letter of the option.  If
     <aOptions> is not supplied, a single "Ok" option is presented.

     ALERT() is sensitive to the presence or absence of the xClipper
     full-screen I/O system.  If the full-screen system is not present,
     ALERT() uses standard I/O to display the message and options tty-style
     (i.e., 80-column, without word wrap, each line ended with carriage
     return/linefeed).


$LANG_RU$

     Функция ALERT() создает диалоговое окно. Это бывает полезно при
     обработке ошибок или в других ситуациях, где необходима пауза.
     Пользователь может перемещать выделенную строку нажатием клавиши
     <Пробел>, осуществить выбор нажатием клавиши <RETURN>, или клавиши,
     соответствующей первой букве выбираемого ответа. Если <массив
     предложений> не задан, то высвечивается предложение "OK" (да).
     ALERT() чувствительна к наличию или отсутствию xClipper-системы
     полноэкранного ввода-вывода. Если такая система отсутствует, то
     ALERT() использует стандартную систему телетайпного ввода-вывода.


$EXAMPLES$

       This example demonstrates use of an alert dialog box.  First,
	the array of options is defined, the ALERT() function gets the user's
	selection, and finally, the user's choice is handled with a DO
	CASE...ENDCASE control structure:

	#define AL_SAVE         1
	#define AL_CANCEL      2
	#define AL_CONT         3

	// Define an array of options
	aOptions := {"Save", "Don't Save", "Continue"}

	// Display the dialog box and get the user's selection
	nChoice  := ALERT("File has changed...", aOptions)

	// Handle the user's request
	DO CASE
	CASE nChoice == AL_SAVE
	   ? "Save"
	CASE nChoice == AL_CANCEL
	   ? "Don't Save"
	CASE nChoice == AL_CONT
	   ? "Continue"
	OTHERWISE
	   ? "Escape"
	ENDCASE
	//
	RETURN


$LANG_RU$

      В этом примере демонстрируется, как использовать диалоговое окно.
       Сначала определяется массив предложений, затем вызывается функция
       ALERT(), и пользователь делает свой выбор. Далее этот выбор
       обрабатывается с помощью управляющей структуры DO CASE...ENDCASE.

       #define AL_SAVE  1
       #define AL_CANCEL 2
       #define AL_CONT  3

       // Определяется массив предложений
       aOptions := {"Сохранить", "Не сохранять", "Продолжить"}

       // Открытие диалогового окна
       nChoice  := ALERT("Файл был изменен...", aOptions)

       // Обработка выбора пользователя
       DO CASE
       CASE nChoice == AL_SAVE
	  ? "Сохранение"
       CASE nChoice == AL_CANCEL
	  ? "Отказ от сохранения"
       CASE nChoice == AL_CONT
	  ? "Продолжение работы"
       OTHERWISE
	  ? "Отказ от выбора"
       ENDCASE
       //
       RETURN


$SEEALSO$

$END$
