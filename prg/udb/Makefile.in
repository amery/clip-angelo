#
#                                            prg/udb/Makefile.in
#

Depend_on 		=		$(Clip_L_Dir)/libclip-codb.so
DIRS_TO_SCAN 	= 		plugins reports
LIBS 				= 		-lclip-codb
prg_files 		= 		$(sort 							\
										codb_pack.prg 		\
										codb_addobj.prg 	\
										codb_ab.prg 		\
										codb_make.prg 		\
										codb_load.prg 		\
										codb_export.prg 	\
										codb_reindex.prg 	\
										codb_arename.prg 	\
										codb_rcheck.prg 	\
							)
#test.prg

exe_files 		= 		$(addsuffix $(EXESUFF), $(basename $(prg_files) ) )

AB_PRG  			= 		$(sort 							\
										ab_obj.prg 			\
										ab_menu.prg 		\
										ab_brow.prg 		\
										ab_init.prg 		\
										ab_funcs.prg 		\
										ab_report.prg 		\
							)

o_files 			= 		$(addsuffix .o, $(basename $(AB_PRG) ) )

SRC_C_files 		= 			$(sort $(c_files) )
SRC_PRG_files 		= 			$(sort $(prg_files) $(AB_PRG) )
E_clip 				=
export

######################################################################################
###################################################################################### local rules


all : Makefile $(DIRS_TO_SCAN) $(o_files) $(exe_files)

hash1 :

cfg :

commit:
	../_cvs commit

update:
	../_cvs update -dP

cleanc:
	$(E_rm)rm -rf$(V) *.c *.b
	$(E_rm)rm -rf$(V) *.pro $(exe_files)

distcleanc :
	$(E_rm)rm -rf$(V) *.g

include $(Makefile_o_in)

install : all
	$(E_mkD)mkdir -p$(V) $(INSTDIR)/codb_ab/plugins
	$(E_cp)cp --remove-destination -Rfpu$(V) plugins/* $(INSTDIR)/codb_ab/plugins/
	$(E_mkD)mkdir -p$(V) $(INSTDIR)/codb_ab/reports
	$(E_cp)cp --remove-destination -Rfup$(V) reports/* $(INSTDIR)/codb_ab/reports/
	$(E_cp)cp --remove-destination -fpu$(V) codb_ab$(EXESUFF) $(INSTDIR)/bin/
	$(E_cp)cp --remove-destination -fpu$(V) codb_make$(EXESUFF) $(INSTDIR)/bin/
	$(E_cp)cp --remove-destination -fpu$(V) codb_load$(EXESUFF) $(INSTDIR)/bin/
	$(E_cp)cp --remove-destination -fpu$(V) codb_pack$(EXESUFF) $(INSTDIR)/bin/
	$(E_cp)cp --remove-destination -fpu$(V) codb_reindex$(EXESUFF) $(INSTDIR)/bin/
	$(E_cp)cp --remove-destination -fpu$(V) codb_rcheck$(EXESUFF) $(INSTDIR)/bin/
	$(E_cp)cp --remove-destination -fpu$(V) codb_addobj$(EXESUFF) $(INSTDIR)/bin/
	$(E_cp)cp --remove-destination -fpu$(V) codb_export$(EXESUFF) $(INSTDIR)/bin/
	$(E_cp)cp --remove-destination -fpu$(V) codb_arename$(EXESUFF) $(INSTDIR)/bin/

test$(EXESUFF): test.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 		\
		$(Trace_clip_d) 	;										\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;	\
	else 																\
		$(Trace_clip) 		;										\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) ;		\
	fi

test2$(EXESUFF): test2.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 		\
		$(Trace_clip_d) 	;										\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;	\
	else 																\
		$(Trace_clip) 		;										\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) ;		\
	fi

codb_make$(EXESUFF): codb_make.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 		\
		$(Trace_clip_d) 	;										\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;	\
	else 																\
		$(Trace_clip) 		;										\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) ;		\
	fi

codb_load$(EXESUFF): codb_load.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 		\
		$(Trace_clip_d) 	;										\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;	\
	else 																\
		$(Trace_clip) 		;										\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) ;		\
	fi

codb_export$(EXESUFF): codb_export.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 		\
		$(Trace_clip_d) 	;										\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;	\
	else 																\
		$(Trace_clip) 		;										\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) ;		\
	fi

codb_pack$(EXESUFF): codb_pack.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 		\
		$(Trace_clip_d) 	;										\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;	\
	else 																\
		$(Trace_clip) 		;										\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) ;		\
	fi

codb_reindex$(EXESUFF): codb_reindex.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 		\
		$(Trace_clip_d) 	;										\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;	\
	else 																\
		$(Trace_clip) 		;										\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) ;		\
	fi

codb_rcheck$(EXESUFF): codb_rcheck.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 				\
		$(Trace_clip_d) 	;												\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;			\
	else 																		\
		$(Trace_clip) 		;												\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) $(LIBS) ;	\
	fi

codb_check$(EXESUFF): codb_check.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 		\
		$(Trace_clip_d) 	;										\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;	\
	else 																\
		$(Trace_clip) 		;										\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) ;		\
	fi

codb_addobj$(EXESUFF): codb_addobj.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 		\
		$(Trace_clip_d) 	;										\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;	\
	else 																\
		$(Trace_clip) 		;										\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) ;		\
	fi

codb_arename$(EXESUFF): codb_arename.prg $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 			\
		$(Trace_clip_d) 	;											\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(LIBS) ;		\
	else 																	\
		$(Trace_clip) 			;										\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(LIBS) ;			\
	fi

codb_ab$(EXESUFF): codb_ab.prg $(o_files) $(CLIP) $(FULL_LIBCLIP) $(Depend_on)
	$(E_clip)if [ -f $(subst .prg,.g,$<) ] ; then 						\
		$(Trace_clip_d) 	;														\
		$(CLIP) $(CLIPFLAGS) -g -o $@ -esM $< $(o_files) $(LIBS) ;	\
	else 																				\
		$(Trace_clip) 		;														\
		$(CLIP) $(CLIPFLAGS) -o $@ -esM $< $(o_files) $(LIBS) ;		\
	fi

include $(Makefile_end_in)
