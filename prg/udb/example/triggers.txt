dep_dbf.prg:	self:runTrigger(class_id,"BEFORE_DELETE_OBJECT",cId)
dep_dbf.prg:	self:runTrigger(class_id,"AFTER_DELETE_OBJECT",cId)
dep_dbf.prg:	self:runTrigger(class_id,"BEFORE_APPEND_OBJECT",oData)
dep_dbf.prg:	self:runTrigger(class_id,"AFTER_APPEND_OBJECT",oData)
dep_dbf.prg:	self:runTrigger(class_id,"BEFORE_UPDATE_OBJECT",oData)
dep_dbf.prg:	self:runTrigger(class_id,"AFTER_UPDATE_OBJECT",oData)
dep_dbf.prg:	self:runTrigger(ret:class_id,"AFTER_GETVALUE_OBJECT",ret)
dep_dbf.prg:	self:runTrigger(class_id,"BEFORE_SELECT_OBJECT",nIndex)
dep_dbf.prg:	self:runTrigger(class_id,"AFTER_SELECT_OBJECT",nIndex)
dep_dbf.prg:	self:runTrigger(self:id,"BEFORE_CLOSE_DEPOSITORY")
dep_dbf.prg:	self:runTrigger(self:id,"AFTER_CLOSE_DEPOSITORY")
dict_dbf.prg:        self:runTrigger(self:id,"BEFORE_CLOSE_DICTONARY")
dict_dbf.prg:        self:runTrigger(self:id,"AFTER_CLOSE_DICTONARY")
dict_dbf.prg:        self:runTrigger(self:id,"AFTER_OPEN_DICTONARY")
dict_dbf.prg:        self:runTrigger(metaname,"BEFORE_SELECT_DICTONARY",nIndex,sName)
dict_dbf.prg:        self:runTrigger(metaname,"AFTER_SELECT_DICTONARY",nIndex,sName)
dict_dbf.prg:        ::runTrigger(cId,"AFTER_GETVALUE_CLASS",ret)
dict_dbf.prg:        self:runTrigger(cId,"BEFORE_DELETE_CLASS")
dict_dbf.prg:        self:runTrigger(cId,"AFTER_DELETE_CLASS")
dict_dbf.prg:        self:runTrigger(self:id,"BEFORE_APPEND_CLASS",oData)
dict_dbf.prg:        self:runTrigger(self:id,"AFTER_APPEND_CLASS",oData)
dict_dbf.prg:        self:runTrigger(oData:id,"BEFORE_UPDATE_CLASS",oData)
dict_dbf.prg:        self:runTrigger(oData:id,"AFTER_UPDATE_CLASS",oData)
