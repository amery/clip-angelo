TO DO :

	-	both compile mode under x86_64 environment;
	-	clip_cld in 64 bits mode;
	-	example(s) compile;
	-	commented source;
	-	better library dependency;
	-	DOS/Windows environment;
	-	CygWin environment;
	-	MingW environment;
	-	...
	-	Any suggestion are welcome.

Version 1.2.3 on 2009-09-09.

	-	Compilation mode 32 OR 64 bits;

	-	Compilation destinations :
				-	"home" 			:	$HOME/clip(32|64);
				-	"local" 			:	../clip-prg.32-64/../clip(32|64);
				-	"opt"				:	/opt/clip(32|64) (needs write access rights)(root);
				-	"usr.local" 	:	/usr/local/clip(32|64) (needs write access rights)(root);
			all clip(32|64)/bin/* linked to $HOME/bin;
			if you need to install system wide than you have to install "opt" or "usr.local".
			Easy batch files : home.sh opt.sh local.sh usr.local.sh clean.sh ;
				force.clean.sh erases ALL Makefile files.

	-	make clean : erases simple generated files : Makefile Makefile.ini configure configure.ini *.o

	- 	make distclean : makes all blank ( = from .tgz)

	-	Compilation with debug switch :
			If you create a file with the extension ".g" than the file is compile in debug mode;
			See file : "init/Makefile.o.in";
			E.g. : source.c & source.g or source2.prg & source2.g.

	-	Uniform configure* and Makefile* files;
			All "configure" files except the "main" are create at "configure" time.
			They are made from "configure.in" & "configure.ini" files.
			All "configure" files call a library "functions" file "init/functions" which contains all routines.
			"Makefile" files are made from "Makefile.ini" (Makefile.inc) (Makefile.01) Makefile.in at "configure" time.

	-	"cliplibs/clip-*" packages
			"cliplibs/clip-*" packages are installed is a "cliplibs/clip-packages.ok" files exists;
				"cliplibs/clip-packages.ok" file is automatically created if you have answer "Y" to all asked questions;
			"cliplibs/clip-*" packages are NOT installed is a "cliplibs/clip-packages.no" files exists;
				"cliplibs/clip-packages.no" file is automatically created if you have answer "N" to ANY of asked questions;

	-	Normally, the most recent file before running compile is "Makefile";
			See : "init/Makefile.end.in" file for details of rules.




Take over from version 1.2.0 on 2009-06-30

